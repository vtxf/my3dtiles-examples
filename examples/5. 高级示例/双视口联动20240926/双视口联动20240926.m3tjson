{
    "asset": {
        "type": "My3dtiles",
        "version": "0.9.24",
        "createdTime": "2024-03-18T07:55:59.569Z",
        "modifiedTime": "2024-11-11T00:59:37.976Z",
        "name": "未命名项目"
    },
    "sceneTree": {
        "root": {
            "name": "root",
            "children": [
                {
                    "name": "默认视口",
                    "sceneObj": {
                        "id": "8cb53038-afc5-400e-aac4-5fa96df42e19",
                        "type": "CzmViewer",
                        "show": true,
                        "actived": true,
                        "zIndex": "1",
                        "originRatioAndOffset": [
                            0.5,
                            0,
                            0,
                            0
                        ],
                        "sizeRatioAndOffset": [
                            0.5,
                            1,
                            0,
                            0
                        ],
                        "name": "默认视口",
                        "ref": "v2",
                        "sceneSsccZoomFactor": 2,
                        "clockCurrentTime": 1727228487332
                    }
                },
                {
                    "name": "MyViewersSyncTest 类定义脚本",
                    "sceneObj": {
                        "id": "689e7198-bca2-4247-8d0f-2fbefb92ece1",
                        "type": "SceneScript",
                        "evalFuncStr": "\r\n\r\nfunction init() {\r\n    console.log(`Custom SceneObject begin`);\r\n\r\n    if (window.MyViewersSyncTest) return;\r\n    \r\n    const { SceneObject, BooleanProperty, ESSceneObject, GroupProperty, StringProperty, NumberProperty, PickedInfo, PositionEditing, PositionProperty, RotationProperty } = XE2[\"xe2-base-objects\"];\r\n    const { Destroyable, Event, extendClassProps, Listener, PartialWithUndefinedReactivePropsToNativeProps, reactArray, reactArrayWithUndefined, ReactivePropsToNativePropsAndChanged } = XE2['xe2-base-utils'];\r\n    const { ObjResettingWithEvent } = XE2['xe2-utils'];\r\n\r\n    function trackViewer(sourceViewer, targetViewer) {\r\n        var d = sourceViewer.cameraChanged.disposableOn(() => {\r\n            // if (!(sourceViewer.focused ?? false)) return;\r\n            if (sourceViewer.subContainer !== document.activeElement) return;\r\n            var cameraInfo = sourceViewer.getCameraInfo();\r\n            var { position, rotation } = cameraInfo;\r\n            targetViewer.flyTo(position, undefined, rotation, 0);\r\n        });\r\n        return d;\r\n    }\r\n            \r\n    function bindViewers() {\r\n        const { v, v2 } = XE2.g.refs;\r\n        if (!v || !v2) {\r\n            console.error(`!v || !v2`);\r\n            return;\r\n        }\r\n    \r\n        const d = trackViewer(v, v2);\r\n        const d2 = trackViewer(v2, v);\r\n        return () => {\r\n            d();\r\n            d2();\r\n        }\r\n    }\r\n\r\n    class ViewersBinding extends Destroyable {\r\n        constructor() {\r\n            super();\r\n            this.dispose(bindViewers());\r\n        }\r\n    }\r\n\r\n    class MyViewersSyncTest extends ESSceneObject {\r\n        static type = this.register('MyViewersSyncTest ', this, { chsName: 'MyViewersSyncTest ', tags: ['M3tObjects'], description: \"MyViewersSyncTest \" });\r\n        get typeName() { return 'MyViewersSyncTest '; }\r\n        get defaultProps() { return MyViewersSyncTest.createDefaultProps(); }\r\n        get json() { return this._innerGetJson(); }\r\n        set json(value) { this._innerSetJson(value); }\r\n\r\n        _bindingResetting = this.disposeVar(new ObjResettingWithEvent(this.enabledChanged, () => {\r\n            if (!this.enabled) return undefined;\r\n            return new ViewersBinding();\r\n        }));\r\n    \r\n        constructor(id) {\r\n            super(id);\r\n            this.name = `未命名对象(${this.id})`;\r\n        }\r\n    \r\n        // language?: string\r\n        getProperties(language) {\r\n            return [\r\n                ...super.getProperties(language),\r\n                new GroupProperty('通用', '通用', [\r\n                    new BooleanProperty('启用', '启用', false, false, [this, 'enabled']),\r\n                ]),\r\n            ]\r\n        }\r\n    }\r\n    \r\n    MyViewersSyncTest.createDefaultProps = () => ({\r\n        enabled: true, \r\n        ...ESSceneObject.createDefaultProps(),\r\n    });\r\n    \r\n    extendClassProps(MyViewersSyncTest.prototype, MyViewersSyncTest.createDefaultProps);\r\n    \r\n    console.log(`Custom SceneObject end!`);\r\n    \r\n}\r\n\r\ninit();\r\n",
                        "runOnLoaded": true,
                        "name": "MyViewersSyncTest 类定义脚本"
                    }
                },
                {
                    "name": "MyViewersSyncTest ",
                    "sceneObj": {
                        "id": "da9b0224-a250-4599-a8d7-fee465f68cf7",
                        "type": "MyViewersSyncTest ",
                        "name": "MyViewersSyncTest "
                    }
                }
            ]
        }
    },
    "builtin": {
        "czmViewer": {
            "id": "1ce18002-4c65-4cdb-8b75-572c3d2a25ce",
            "type": "CzmViewer",
            "show": true,
            "actived": true,
            "zIndex": "1",
            "originRatioAndOffset": [
                0,
                0,
                0,
                0
            ],
            "sizeRatioAndOffset": [
                0.5,
                1,
                0,
                0
            ],
            "name": "默认视口",
            "ref": "v",
            "sceneSsccZoomFactor": 2,
            "clockCurrentTime": 1727228487332
        },
        "offlineImagery": {
            "id": "4387b28d-5c34-42e0-8698-1f80e1997928",
            "type": "CzmImagery",
            "imageryProvider": {
                "type": "TileMapServiceImageryProvider",
                "url": "${czm-path}/Assets/Textures/NaturalEarthII"
            },
            "zIndex": -2,
            "name": "默认离线影像"
        },
        "baseImagery": {
            "id": "4180d729-bdb1-45a7-9b2b-b5923dbca1f9",
            "type": "CzmImagery",
            "imageryProvider": {
                "type": "UrlTemplateImageryProvider",
                "url": "https://{s}.tianditu.gov.cn/img_w/wmts?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=img&STYLE=default&TILEMATRIXSET=w&FORMAT=tiles&TILEMATRIX={z}&TILEROW={y}&TILECOL={x}&tk=85c9d12d5d691d168ba5cb6ecaa749eb",
                "subdomains": [
                    "t0",
                    "t1",
                    "t2",
                    "t3",
                    "t4",
                    "t5",
                    "t6",
                    "t7"
                ],
                "minimumLevel": 0,
                "maximumLevel": 18
            },
            "zIndex": -1,
            "name": "基础地球影像"
        },
        "czmTerrain": {
            "id": "f34dec22-a8eb-4824-96d7-06430509da53",
            "type": "CzmTerrain",
            "show": false,
            "provider": {
                "type": "CesiumTerrainProvider",
                "url": "ion://1",
                "requestVertexNormals": true
            },
            "name": "Cesium官方地形"
        },
        "czmClassicNavigator": {
            "id": "009f7247-0765-431d-9fab-a5a0e12b8540",
            "type": "CzmClassicNavigator",
            "name": "经典指北针"
        },
        "lastView": {
            "id": "02592260-37be-4467-b9ea-7bbfa885a0f7",
            "type": "View",
            "position": [
                106.00234891251841,
                30.873786164737528,
                5681075.8914939435
            ],
            "rotation": [
                357.4128206983768,
                -89.93216743506001,
                0
            ],
            "name": "最近视图"
        },
        "initOptions": {
            "id": "1c34c647-a42c-4a4b-b5c6-4107faa800d9",
            "type": "M3tInitOptions",
            "name": "初始化选项"
        }
    }
}